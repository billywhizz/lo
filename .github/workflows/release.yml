name: build and upload artifacts for release
on:
  release:
    types:
      - published

defaults:
  run:
    shell: bash

jobs:

  build-mac:
#    if: ${{ false }}  # disable
    name: mac
    runs-on: macos-13
    strategy:
      fail-fast: false
      matrix:
        platform: [x64]
    steps:
      - uses: actions/checkout@v3
      - name: compile
        run: |
          make ARCH=${{ matrix.platform }} lo
      - name: check
        env:
          LO_HOME: ${{ github.workspace }}
        run: |
          make check
          brew install lz4 zstd openssl@3
          ./lo build runtime runtime/lo
      - name: compress runtime
        run: |
          gzip -9 -c lo > lo-mac-${{ matrix.platform }}.gz
      - name: upload compressed artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: lo-mac-${{ matrix.platform }}.gz
          asset_name: lo-mac-${{ matrix.platform }}.gz
          asset_content_type: application/gzip

  build-mac-arm:
#    if: ${{ false }}  # disable
    name: mac
    runs-on: macos-14
    strategy:
      fail-fast: false
      matrix:
        platform: [arm64]
    steps:
      - uses: actions/checkout@v3
      - name: compile
        run: |
          make ARCH=${{ matrix.platform }} lo
      - name: check
        env:
          LO_HOME: ${{ github.workspace }}
          PREFIX: /opt/homebrew/opt
        run: |
          make check
          brew install lz4 zstd openssl@3
          ./lo build runtime runtime/lo
      - name: compress runtime
        run: |
          gzip -9 -c lo > lo-mac-${{ matrix.platform }}.gz
      - name: upload compressed artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: lo-mac-${{ matrix.platform }}.gz
          asset_name: lo-mac-${{ matrix.platform }}.gz
          asset_content_type: application/gzip

  build-linux-x64:
#    if: ${{ false }}  # disable
    name: linux-x64
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        platform: [x64]
    steps:
      - uses: actions/checkout@v3
      - name: install libcurl
        run: |
          sudo apt-get update -y
          sudo apt-get install -qy libcurl4-openssl-dev
      - name: compile
        run: |
          make lo
      - name: check
        env:
          LO_HOME: ${{ github.workspace }}
        run: |
          make check
          sudo apt-get install -qy libffi-dev liblz4-dev libseccomp-dev libsqlite3-dev libtcc-dev zlib1g-dev tcc
          ./lo build runtime runtime/lo
      - name: compress runtime
        run: |
          gzip -9 -c lo > lo-linux-x64.gz
      - name: upload compressed artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: lo-linux-x64.gz
          asset_name: lo-linux-x64.gz
          asset_content_type: application/gzip

  build-linux-arm:
#    if: ${{ false }}  # disable
    name: linux-arm64
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        platform: [arm64]
    steps:
      - uses: actions/checkout@v3
      - name: install libcurl
        run: |
          sudo apt-get update -y
          sudo apt-get install -qy libcurl4-openssl-dev
      - name: compile
        run: |
          make ARCH=arm64 lo
      - name: compress runtime
        run: |
          gzip -9 -c lo > lo-linux-arm64.gz
      - name: upload compressed artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: lo-linux-arm64.gz
          asset_name: lo-linux-arm64.gz
          asset_content_type: application/gzip

  build-windows:
#    if: ${{ false }}  # disable
    name: windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        platform: [x64]
    steps:
      - uses: actions/checkout@v3
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.platform }}
      - name: compile
        run: |
          make lo.exe
      - name: check
        run: |
          make check
      - name: compress runtime
        run: |
          gzip -9 -c lo.exe > lo.exe.gz
      - name: upload compressed artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: lo.exe.gz
          asset_name: lo.exe.gz
          asset_content_type: application/gzip
